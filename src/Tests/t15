#!/bin/bash
# Storage used < 16*SIZE?  Text (no flags)

ulimit -s 16384
ulimit -s

RUN=/c/cs323/bin/run
TESTS=/c/cs323/Hwk4/Tests

EFLAG=
FILE=/c/cs323/Doc/alice.1
SIZE=4096

UPPER=$((16 * $SIZE + 10000))

EOUT=/tmp/lzw.e.$USER.$$
DOUT=/tmp/lzw.d.$USER.$$

trap "/bin/rm -f $EOUT $DOUT" 0 1 2 3 9 15

cat $FILE | $RUN ./encode $EFLAG > $EOUT
cat $EOUT | $RUN ./decode        > $DOUT
cat $DOUT | /usr/bin/cmp - $FILE

#####
# Check maximum size of data+heap+stack for encode

DATA=`$TESTS/maxData   2>&1 ./encode`
HEAP=`$TESTS/maxHeap   2>&1 ./encode $EFLAG < $FILE > $EOUT`
STACK=`$TESTS/maxStack 2>&1 ./encode $EFLAG < $FILE > $EOUT`

TOTAL=$(($DATA + $HEAP + $STACK))
if test $TOTAL -gt $UPPER -o -v DEBUG_SCRIPT ; then
  echo "TOTAL(encode) = $TOTAL > $UPPER = UPPER BOUND"
  echo "DATA = $DATA, HEAP = $HEAP, STACK = $STACK"
fi


#####
# Check maximum size of data+heap+stack for decode

if test ! -e $EOUT ; then exit ; fi         # Exit if earlier command timed out

DATA=`$TESTS/maxData   2>&1 ./decode`
HEAP=`$TESTS/maxHeap   2>&1 ./decode < $EOUT > $DOUT`
STACK=`$TESTS/maxStack 2>&1 ./decode < $EOUT > $DOUT`

TOTAL=$(($DATA + $HEAP + $STACK))
if test $TOTAL -gt $UPPER -o -v DEBUG_SCRIPT ; then
  echo "TOTAL(decode) = $TOTAL > $UPPER = UPPER BOUND"
  echo "DATA = $DATA, HEAP = $HEAP, STACK = $STACK"
fi
