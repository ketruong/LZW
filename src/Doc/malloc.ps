%!PS-Adobe-3.0
%%Creator: groff version 1.15
%%CreationDate: Mon Apr  9 09:01:53 2001
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.15 0
%%Pages: 15
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.15 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0
ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 9/Times-Bold@0 SF -.18(NA)72 84 S(ME).18 E F0
(dbmalloc \255 deb)108 96 Q(ugging malloc library)-.2 E F1(SYNOPSIS)72
112.8 Q/F2 10/Times-Bold@0 SF(#include <malloc.h>)108 124.8 Q
(int malloc_chain_check\(\215ag\);)108 141.6 Q(int \215ag;)108 153.6 Q
-.1(vo)108 170.4 S(id malloc_dump\(fd\);).1 E(int fd;)108 182.4 Q -.1
(vo)108 199.2 S(id malloc_list\(fd,histid1,histid2\);).1 E(int fd;)108
211.2 Q(unsigned long histid1, histid2;)108 223.2 Q
(unsigned long malloc_inuse\(histidptr\);)108 240 Q
(unsigned long * histidptr;)108 252 Q -.1(vo)108 268.8 S
(id malloc_mark\(ptr\);).1 E 14.06(char *)108 280.8 R(ptr;)2.5 E
(int dbmallopt\(cmd,v)108 297.6 Q(al\);)-.1 E(int cmd;)108 309.6 Q
(union dbmalloptar)108 321.6 Q 2.5(g*v)-.1 G(al;)-2.6 E -.1(vo)108 338.4
S(id malloc_abort\(\);).1 E -.1(vo)108 355.2 S(id malloc_enter\(func\);)
.1 E(char * func;)108 367.2 Q -.1(vo)108 384 S(id malloc_lea).1 E -.1
(ve)-.25 G(\(func\);).1 E(char * func;)108 396 Q F1(DESCRIPTION)72 412.8
Q F0 .056(This malloc library is a replacement for the standard library\
 to be used during softw)108 424.8 R .056(are de)-.1 F -.15(ve)-.25 G
(lopment/deb).15 E(ug-)-.2 E 2.5(ging. See)108 436.8 R(the standard mal\
loc\(3\) pages for more information on the use of the follo)2.5 E
(wing functions:)-.25 E F2(calloc)144 453.6 Q F0(\(\),)A F2(cfr)2.5 E
(ee)-.18 E F0(\(\),)A F2(fr)2.5 E(ee)-.18 E F0(\(\),)A F2(malloc)2.5 E
F0(\(\),)A F2 -.18(re)2.5 G(alloc).18 E F0(\(\))A(This library dif)108
470.4 Q(fers from the standard malloc library in the follo)-.25 E
(wing w)-.25 E(ays:)-.1 E .417(1. Each malloc se)108 494.4 R .417
(gment contains a magic number so that free can v)-.15 F .418
(erify that the pointer passed points to a)-.15 F -.25(va)108 506.4 S
(lid malloc se).25 E(gment.)-.15 E .825(2. Each malloc se)108 530.4 R
.825(gment is \214lled with a non-zero pattern so that code that depend\
s upon malloc se)-.15 F(gments)-.15 E(being null will f)108 542.4 Q
(ail.)-.1 E .783(3. The size of each se)108 566.4 R .783
(gment will be at least 1 byte lar)-.15 F .784
(ger than requested and the e)-.18 F .784(xtra bytes will be \214lled)
-.15 F .355(with a non-zero pattern.)108 578.4 R .355
(When free is called, it will v)5.355 F .354
(erify that you did not go be)-.15 F .354(yond the number of bytes)-.15
F(you ask)108 590.4 Q(ed for)-.1 E(.)-.55 E 1.051(4. When a se)108 614.4
R 1.051(gment is freed, it will be \214lled with a dif)-.15 F 1.052
(ferent non-zero pattern to ensure that the program)-.25 F(doesn')108
626.4 Q 2.5(td)-.18 G(epend upon the use of already freed data.)-2.5 E
.226(5. Whene)108 650.4 R -.15(ve)-.25 G 2.726(ra).15 G .526 -.15(ny o)
-2.726 H 2.726(ft).15 G .225(he string or memory functions \(str*, b*, \
mem*\) are called with a pointer that is within)-2.726 F .376
(the malloc arena,)108 662.4 R .376(the operation is check)5.376 F .376
(ed to v)-.1 F .376(erify that it does not o)-.15 F -.15(ve)-.15 G .376
(rrun the malloced se).15 F 2.877(gment. A)-.15 F -.1(fa)2.877 G(il-).1
E(ure of this check is considered a "w)108 674.4 Q(arning le)-.1 E -.15
(ve)-.25 G 2.5(le).15 G
(rror" \(described later\) and is handled accordingly)-2.5 E(.)-.65 E
218.17(VTI 1)297.67 768 R EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E .424(6. Run time checking can include v)108 84 R
.424(eri\214cation of the malloc chain at each and e)-.15 F -.15(ve)-.25
G .423(ry call to one of the mal-).15 F
(loc functions or manually by calling the malloc_chain_check function.)
108 96 Q(7. Extensi)108 120 Q .3 -.15(ve s)-.25 H
(upport for tracking memory leaks is pro).15 E(vided.)-.15 E
(When a problem is found, the follo)108 144 Q
(wing error message is displayed:)-.25 E/F1 8/Courier@0 SF
(MALLOC Warning from funcname\(\) \(called from filename.c line ###\):)
144 166 Q(Warning message goes here)144 176 Q/F2 10/Times-Bold@0 SF
(funcname)108 200 Q F0 .074(is the name of the function that has found \
the problem and will usually be an entry point into the)2.574 F(library)
108 212 Q 5.072(.T)-.65 G .072(he information that identi\214es where t\
he function is called from will only be a)-5.072 F -.25(va)-.2 G .071
(ilable if the source).25 F(module w)108 224 Q(as compiled with the)-.1
E F2(malloc.h)2.5 E F0(\214le included.)2.5 E .708
(If the error is caused by a problem in the malloc chain and the of)108
248 R .708(fending chain element can be identi\214ed,)-.25 F .76
(the follo)108 260 R .76(wing information is also displayed \(NO)-.25 F
.76(TE: this is just a guess by the softw)-.4 F .76
(are, it may not be the)-.1 F(actual culprit\):)108 272 Q F1
(This error is *probably* associated with the following allocation:)144
294 Q 4.8(Ac)158.4 314 S
(all to malloc for 33 bytes in program.c on line 834.)-4.8 E
(This was the 172nd call to malloc.)158.4 324 Q F0 .6(This e)108 348 R
.6(xample assumes that)-.15 F F2(pr)3.1 E(ogram.c)-.18 E F0 .601
(included the deb)3.101 F .601(ugging library)-.2 F F2(malloc.h)3.101 E
F0 3.101(\214le. If)3.101 F .601(not, the identi\214ca-)3.101 F
(tion information will be as follo)108 360 Q(ws:)-.25 E F1
(This error is *probably* associated with the following allocation:)144
382 Q 4.8(Ac)158.4 402 S(all to malloc for 33 bytes in an unknown file.)
-4.8 E(This was the 172nd call to malloc.)158.4 412 Q F0 .61(The identi\
\214cation of which call to malloc is associated with the problem is he\
lpful in that it gi)108 436 R -.15(ve)-.25 G 3.11(sy).15 G .61(ou the)
-3.11 F .469(information necessary to set the breakpoint on the allocat\
ion function for that particular in)108 448 R -.2(vo)-.4 G .47
(cation \(break-).2 F .181(points usually can ha)108 460 R .481 -.15
(ve c)-.2 H .181(ounters associated with them\).).15 F .18
(The counters for the three primary allocation entry)5.181 F
(points \(malloc, calloc, and realloc\) are managed separately)108 472 Q
(.)-.65 E(NO)108 496 Q 1.13(TE 1: if you w)-.4 F 1.13
(ant to set a breakpoint to capture this in)-.1 F -.2(vo)-.4 G 1.131
(cation of malloc, the actual function that is).2 F .072
(being called is)108 508 R F2(deb)2.572 E(ug_malloc)-.2 E F0(\(or)2.572
E F2(deb)2.572 E(ug_r)-.2 E(ealloc)-.18 E F0(for)2.571 E F2 -.18(re)
2.571 G(alloc).18 E F0(and)2.571 E F2(deb)2.571 E(ug_calloc)-.2 E F0
(for)2.571 E F2(calloc)2.571 E F0 2.571(\)a)C .071(nd that is where)
-2.571 F(the breakpoint should be set.)108 520 Q 218.17(VTI 2)297.67 768
R EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E(NO)108 84 Q .125(TE 2: Since the softw)-.4 F .126
(are is guessing at the of)-.1 F .126(fending malloc chain se)-.25 F
.126(gment, it is possible that one of the)-.15 F .8(nearby se)108 96 R
.8(gments is actually the culprit.)-.15 F .799(If the en)5.799 F .799
(vironment v)-.4 F(ariable)-.25 E/F1 8/Times-Roman@0 SF(MALLOC_SHO)3.299
E(W_LINKS)-.28 E F0 .799(is set, both the)3.299 F(se)108 108 Q .107
(gment preceding and the se)-.15 F .107(gment follo)-.15 F .107
(wing the accused se)-.25 F .107(gment will also be identi\214ed.)-.15 F
.108(The follo)5.108 F .108(wing is)-.25 F 2.5(as)108 120 S
(ample output:)-2.5 E/F2 8/Courier@0 SF
(This error is *probably* associated with the following allocation:)144
142 Q 4.8(Ac)163.2 162 S(all to malloc for 33 bytes in an unknown file.)
-4.8 E(This was the 172nd call to malloc.)163.2 172 Q
(The malloc chain element prior to the suspect allocation is from:)163.2
192 Q 4.8(Ac)163.2 212 S(all to calloc for 512 bytes in main.c line 16.)
-4.8 E(This was the 4th call to calloc.)163.2 222 Q
(This block was freed on the 2nd call to free\(\))163.2 232 Q
(in main.c on line 51.)163.2 242 Q
(The malloc chain element following the suspect allocation is from:)
163.2 262 Q 4.8(Ac)163.2 282 S
(all to realloc for 4096 bytes in func.c line 376.)-4.8 E
(This was the 1st call to realloc.)163.2 292 Q F0 .307
(Once the error message has been displayed, the softw)108 316 R .307
(are will then determine ho)-.1 F 2.807(wt)-.25 G 2.807(oh)-2.807 G .307
(andle the error)-2.807 F 5.307(.T)-.55 G(his)-5.307 E .901
(handling will be based upon the type of error le)108 328 R -.15(ve)-.25
G 3.401(l\().15 G -.1(wa)-3.401 G .901(rning or f).1 F .901
(atal\) and the error handling in ef)-.1 F .902(fect for)-.25 F .052
(that error le)108 340 R -.15(ve)-.25 G 2.551(l\().15 G .051
(as speci\214ed by calls to mallopt or via en)-2.551 F .051(vironment v)
-.4 F 2.551(ariables\). The)-.25 F .051(coding for the error han-)2.551
F(dling is as follo)108 352 Q(ws:)-.25 E 15(0c)136 368.8 S
(ontinue operations)-15 E 15(1d)136 380.8 S(rop core and e)-15 E(xit)
-.15 E 15(2j)136 392.8 S(ust e)-15 E(xit)-.15 E 15(3d)136 404.8 S 2.371
(rop core, b)-15 F 2.371(ut continue e)-.2 F -.15(xe)-.15 G 4.872
(cuting. Core).15 F 2.372
(\214les will be placed into core.[PID].[counter] i.e:)4.872 F
(core.00123.001)156 416.8 Q 12.5(128 dump)126 428.8 R
(malloc chain and continue)2.5 E 12.5(129 dump)126 440.8 R
(malloc chain, dump core, and e)2.5 E(xit)-.15 E 12.5(130 dump)126 452.8
R(malloc chain, e)2.5 E(xit)-.15 E 12.5(131 dump)126 464.8 R
(malloc chain, dump core, continue processing)2.5 E/F3 10/Times-Bold@0
SF(dbmallopt)108 488.8 Q F0(\(\) is used to set the malloc deb)A
(ugging options. The follo)-.2 E(wing options can be set:)-.25 E F1
(MALLOC_W)126 505.6 Q(ARN)-.96 E F0 .087(set the error handling for w)
38.744 F .087(arning le)-.1 F -.15(ve)-.25 G 2.586(le).15 G(rrors.)
-2.586 E F3 -.1(va)5.086 G(l.i).1 E F0 .086(is an inte)2.586 F .086
(ger that can con-)-.15 F(tain an)226 517.6 Q 2.5(yo)-.15 G
(ne of the follo)-2.5 E(wing v)-.25 E(alues:)-.25 E F1(M_HANDLE_IGNORE)
244 534.4 Q F0 1.393(ignore error \(just display w)21.792 F 1.394
(arning message and)-.1 F(continue processing\))344 546.4 Q F1
(M_HANDLE_ABOR)244 558.4 Q(T)-.48 E F0(drop core and e)25.376 E(xit)-.15
E F1(M_HANDLE_EXIT)244 570.4 Q F0(just e)33.792 E(xit \(no core drop\))
-.15 E F1(M_HANDLE_CORE)244 582.4 Q F0(drop core, b)30.672 E(ut k)-.2 E
(eep on going)-.1 E .778(In addition,)226 599.2 R F1(M_HANDLE_DUMP)3.278
E F0 .778(may be or')3.278 F 3.277(di)-.5 G 3.277(nt)-3.277 G 3.277(oc)
-3.277 G .777(ause a dump of the current)-3.277 F(malloc chain.)226
611.2 Q(The def)226 628 Q(ault action for)-.1 E F1(MALLOC_W)2.5 E(ARN)
-.96 E F0(is)2.5 E F1(M_HANDLE_IGNORE)2.5 E F0(.)A F1(MALLOC_F)126 644.8
Q -.968 -.888(AT A)-.592 H(L).888 E F0 .065
(set the error handling for f)38.672 F .066(atal le)-.1 F -.15(ve)-.25 G
2.566(le).15 G(rrors.)-2.566 E F3 -.1(va)5.066 G(l.i).1 E F0 .066
(is equi)2.566 F -.25(va)-.25 G .066(lent to).25 F F3 -.1(va)2.566 G
(l.i).1 E F0(for)2.566 E F1(MAL-)2.566 E(LOC_W)226 656.8 Q(ARN)-.96 E F0
(.)A(The def)226 673.6 Q(ault action for)-.1 E F1(MALLOC_F)2.5 E -.968
-.888(AT A)-.592 H(L).888 E F0(is)2.5 E F1(M_HANDLE_ABOR)2.5 E(T)-.48 E
F0(.)A F1(MALLOC_ERRFILE)126 690.4 Q F0 .406
(set the destination for malloc error messages.)29.776 F F3 -.1(va)5.406
G(l.str).1 E F0 .406(is a pointer to a charac-)2.906 F .528(ter string \
containing the name of the \214le to be used for error messages.)226
702.4 R(Note)5.528 E .16(that error messages are)226 714.4 R/F4 9
/Times-Roman@0 SF(APPENDED)2.66 E F0 .159(to this \214le, so e)2.659 F
.159(xisting error messages will)-.15 F(not be remo)226 726.4 Q -.15(ve)
-.15 G(d.).15 E 218.17(VTI 3)297.67 768 R EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E(If)226 84 Q/F1 8/Times-Roman@0 SF(MALLOC_ERRFILE)
2.5 E F0(is not set, all error messages will be sent to)2.5 E/F2 10
/Times-Bold@0 SF(stderr)2.5 E F0(.)A F1(MALLOC_CKCHAIN)126 100.8 Q F0
1.781(set the malloc chain checking \215ag.)25.784 F(If)6.782 E F2 -.1
(va)4.282 G(l.i).1 E F0 1.782(is non-zero, chain checking at)4.282 F
-2.15 -.25(ev e)226 112.8 T 1.59
(ry call to malloc is turned on. The def).25 F 1.589(ault beha)-.1 F
1.589(vior is to not check the)-.2 F .293(chain at each call to malloc \
because of performance issues \(the library is con-)226 124.8 R
(siderably slo)226 136.8 Q(wer when this function is enabled\).)-.25 E
F1(MALLOC_FREEMARK)126 153.6 Q F0 .865(sets the beha)18.664 F .865
(vior of freeing of mark)-.2 F .864(ed areas.)-.1 F .864(By def)5.864 F
.864(ault, a free of a mark)-.1 F(ed)-.1 E(se)226 165.6 Q .353
(gment generates a w)-.15 F 2.853(arning. If)-.1 F F2 -.1(va)2.853 G
(l.i).1 E F0 .353(is zero, w)2.853 F .354
(arnings will not be generated.)-.1 F F1(MALLOC_FILLAREA)126 182.4 Q F0
.334(set the malloc \214ll area \215ag.)23.56 F F2 -.1(va)5.334 G(l.i).1
E F0 .333(speci\214es the malloc \214lling mode to be used.)2.834 F .399
(There are four modes: 0, 1, 2 and 3.)226 194.4 R .4
(Mode 0 disables all \214lling and checking)5.399 F 1.92
(of \214lled areas \(thereby reducing the ef)226 206.4 R(fecti)-.25 E
-.15(ve)-.25 G 1.92(ness of the library\).).15 F 1.92(Mode 1)6.92 F
2.114(enables the \214lling of boundary areas before and after the allo\
cation areas)226 218.4 R 2.258
(which are used to check for writing before or after the pointer)226
230.4 R 7.257(.M)-.55 G 2.257(ode 2)-7.257 F .684
(includes mode 1 and adds the \214lling of malloced re)226 242.4 R .684
(gions with a speci\214ed \214ll)-.15 F .6
(pattern so that a program does not depend upon malloced re)226 254.4 R
.6(gions to be \214lled)-.15 F 1.951(with zeros.)226 266.4 R 1.951
(Mode 3 includes all of mode 2 and adds the \214lling of free')6.951 F
(d)-.5 E(re)226 278.4 Q(gions so that an attempt to used a freed data a\
rea will result in an error)-.15 E(.)-.55 E 1.034(As f)226 295.2 R 1.034
(ar as performance is concerned, mode 0 will be the f)-.1 F 1.033
(astest mode, while)-.1 F(\(some)226 307.2 Q 2.032(what une)-.25 F 2.033
(xpectedly\) mode 3 is the ne)-.15 F 2.033(xt "f)-.15 F 2.033
(astest" mode with mode 1)-.1 F(bring up the tail end.)226 319.2 Q
(The def)226 336 Q(ault beha)-.1 E(vior for)-.2 E F1(MALLOC_FILLAREA)2.5
E F0(is mode 3.)2.5 E F1(MALLOC_LO)126 352.8 Q(WFRA)-.28 E(G)-.32 E F0
1.924(set the malloc allocation fragmentation handling le)23.272 F -.15
(ve)-.25 G 4.423(l. By).15 F(def)4.423 E 1.923(ault, malloc)-.1 F .485
(uses a \214rst \214t algorithm for ne)226 364.8 R 2.986(wa)-.25 G 2.986
(llocations. Under)-2.986 F .486(certain allocation scenar)2.986 F(-)-.2
E .323(ios, this can lead to signi\214cant memory fragmentation because\
 of the f)226 376.8 R .322(act that)-.1 F
(little allocations can break big blocks up.)226 388.8 Q(If)226 405.6 Q
F2 -.1(va)3.566 G(l.i).1 E F0 1.067(is non-zero, malloc uses a best \
\214t algorithm which will reduce frag-)3.567 F 3.215(mentation. This)
226 417.6 R .715(mechanism, while using less memory)3.215 F 3.215(,i)
-.65 G 3.215(ss)-3.215 G(lo)-3.215 E .715(wer because the)-.25 F .267
(entire free list is check)226 429.6 R .267
(ed instead of just checking until we \214nd a se)-.1 F .268(gment that)
-.15 F(is at least big enough.)226 441.6 Q
(Normally you will not need to set this v)5 E(ariable.)-.25 E F1
(MALLOC_CKD)126 458.4 Q -.968 -.888(AT A)-.32 H F0 .433(enable/disable \
the checking of pointers passed to the memory \(mem*,b*\) and)31.736 F
.033(string \(str*\) functions.)226 470.4 R .033
(This can be used to startup the code with checking dis-)5.033 F .22
(abled \(when you kno)226 482.4 R 2.72(wt)-.25 G .22
(he startup code is functioning correctly\) and then turn)-2.72 F(it on\
 later when you get into the area of the code that is in question.)226
494.4 Q(if)226 511.2 Q F2 -.1(va)2.5 G(l.i).1 E F0
(is non-zero, pointer checking is enabled \(which is the def)2.5 E
(ault mode\).)-.1 E F1(MALLOC_REUSE)126 528 Q F0 1.045
(enable/disable the reuse of freed se)36.888 F 3.545(gments. This)-.15 F
1.045(option can be used to help)3.545 F 1.224(identify where a freed p\
ointer is being re-used, or where it is being freed a)226 540 R
(second time, since the location where it w)226 552 Q
(as freed is also k)-.1 E(ept.)-.1 E .522(It should be noted that the m\
emory requirements for a program will typically)226 568.8 R
(increase signi\214cantly if this option is used.)226 580.8 Q(if)226
597.6 Q F2 -.1(va)3.439 G(l.i).1 E F0 .939(is zero, freed se)3.439 F
.938(gments are not reused for subsequent allocations.)-.15 F(If)8.438 E
1.385(non-zero, freed se)226 609.6 R 1.385(gments can be reused.)-.15 F
1.386(If freed se)6.385 F 1.386(gments are not re-used,)-.15 F 2.01
(you might w)226 621.6 R 2.01(ant to disable \214lling of freed se)-.1 F
2.01(gments \(see the)-.15 F F1(MALLOC_FIL-)4.51 E(LAREA)226 633.6 Q F0
.082(discussions\) so that you can see the data in the se)2.581 F .082
(gment - this w)-.15 F .082(ould be)-.1 F(\214ll mode 2 or belo)226
645.6 Q -.65(w.)-.25 G 218.17(VTI 4)297.67 768 R EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E -.15(Fo)108 84 S 2.738(re).15 G .237
(xample, to set up the session to generate a core \214le for e)-2.888 F
-.15(ve)-.25 G .237(ry malloc w).15 F .237(arning, to drop core and e)
-.1 F .237(xit on)-.15 F 2.5(am)108 96 S(alloc f)-2.5 E
(atal, and to log all messages to the \214le "malloc_log" do the follo)
-.1 E(wing:)-.25 E/F1 8/Courier@0 SF(#include <malloc.h>)144 118 Q
(union dbmalloptarg)144 128 Q(m;)9.6 E
(m.i = M_HANDLE_CORE | M_HANDLE_DUMP;)144 148 Q
(dbmallopt\(MALLOC_WARN,&m\);)144 158 Q(m.i = M_HANDLE_ABORT;)144 178 Q
(dbmallopt\(MALLOC_FATAL,&m\);)144 188 Q(m.str = "malloc_log";)144 208 Q
(dbmallopt\(MALLOC_ERRFILE,&m\);)144 218 Q/F2 10/Times-Bold@0 SF
(dbmallopt)108 242 Q F0 .204(\(\) can be used to set/alter the deb)B
.204(ugging options at an)-.2 F 2.704(yt)-.15 G .204
(ime \(i.e. you may w)-2.704 F .205(ant to turn on chain-)-.1 F .778(ch\
ecking after the program startup if the program startup does a lot of a\
llocations which are kno)108 254 R .777(wn to be)-.25 F(OK\).)108 266 Q
F2(malloc_chain_check)108 290 Q F0 .547
(\(\) will check the status of the malloc arena.)B(If)5.547 E F2(\215ag)
3.047 E F0 .547(is non-zero, an error found in the)3.047 F .277
(chain will cause a f)108 302 R .276(atal error)-.1 F(.)-.55 E F2
(malloc_chain_check)5.276 E F0 .276
(\(\) returns zero when there are no problems found in the)B
(malloc chain, non-zero otherwise.)108 314 Q F2(malloc_dump)108 338 Q F0
.576(\(\) will dump a list of all in-use malloc se)B .576
(gments and the \214rst fe)-.15 F 3.076(wb)-.25 G .576(ytes of each se)
-3.076 F 3.077(gment. If)-.15 F .641(the en)108 350 R .641(vironment v)
-.4 F(ariable)-.25 E/F3 9/Times-Roman@0 SF(MALLOC_DET)3.141 E(AIL)-.837
E F0 .641(is set to a non-zero inte)3.141 F(ger)-.15 E 3.14(,a)-.4 G .64
(ll se)-3.14 F .64(gments \(including those that)-.15 F(ha)108 362 Q
.491 -.15(ve b)-.2 H .191(een freed\) are listed and additional interna\
l information is displayed.).15 F F2(fd)5.191 E F0 .192
(is the \214le descriptor to write)2.691 F(the data to.)108 374 Q F2
(malloc_list)108 398 Q F0 .803
(\(\) will dump a list in the same format as)B F2(malloc_dump)3.303 E F0
-.2(bu)3.303 G 3.303(to).2 G .803(nly the items that are still in use)
-3.303 F .826(and which ha)108 410 R 1.126 -.15(ve b)-.2 H .826
(een allocated within the malloc history id range speci\214ed by).15 F
F2(histid1)3.327 E F0(and)3.327 E F2(histid2)3.327 E F0 3.327(,i)C
(nclu-)-3.327 E(si)108 422 Q -.15(ve)-.25 G 6.476(.T).15 G(he)-6.476 E
F2(histid)3.976 E F0 3.976(sa)C 1.476(re obtained from calls to)-3.976 F
F2(malloc_inuse)3.975 E F0 1.475
(\(\). This is especially useful in tracking do)B(wn)-.25 E
(memory leaks.)108 434 Q F2(fd)5 E F0
(is the \214le descriptor to write the data to.)2.5 E F2(malloc_inuse)
108 458 Q F0 1.312(\(\) returns the amount of malloc data that is curre\
ntly in use \(in bytes\).)B(If)6.313 E F2(histidptr)3.813 E F0 1.313
(is not)3.813 F .743(NULL, it is tak)108 470 R .743(en to be a pointer \
to a place to store the current malloc history id which can be used lat\
er)-.1 F(when)108 482 Q F2(malloc_list)2.5 E F0
(is called to list items that are still in use.)2.5 E 1.223(The follo)
108 506 R 1.223(wing e)-.25 F 1.223(xample sho)-.15 F 1.223
(ws the typical use of the)-.25 F F2(malloc_inuse)3.724 E F0(and)3.724 E
F2(malloc_list)3.724 E F0 1.224(functions in tracking)3.724 F(do)108 518
Q(wn memory leaks:)-.25 E F1(unsigned long)144 540 Q
(histid1, histid2, orig_size, current_size;)9.6 E
(orig_size = malloc_inuse\(&histid1\);)144 560 Q
(/* ..... go do lots of stuff ...... */)144 580 Q
(current_size = malloc_inuse\(&histid2\);)144 600 Q
(if\( current_size != orig_size \))144 620 Q({)144 630 Q
(malloc_list\(2,histid1,histid2\);)180 640 Q(})144 650 Q F2(malloc_mark)
108 674 Q F0 .607(\(\) marks a se)B .607(gment as a non-leak.)-.15 F(Se)
5.607 E .607(gments that are mark)-.15 F .607
(ed are not counted or listed when)-.1 F 2.167
(dealing with memory leaks.)108 686 R 2.168
(This is designed to be used on pointers that remain around fore)7.167 F
-.15(ve)-.25 G 4.668(ra).15 G(nd)-4.668 E(shouldn')108 698 Q 2.5(tb)-.18
G 2.5(ec)-2.5 G(onsidered to be a leak \(in order to decrease the amoun\
t of entries in the leak lists\))-2.5 E 218.17(VTI 5)297.67 768 R EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 10/Times-Bold@0 SF(malloc_abort)108 84 Q F0
.382(\(\) causes the current program to drop core and e)B 2.882
(xit. This)-.15 F .382(function simply calls)2.882 F F1(abort)2.882 E F0
.381(\(\) to do)B .764(its dirty w)108 96 R .764
(ork and is here solely for the purpose of allo)-.1 F .765
(wing the programmer to substitute thier o)-.25 F .765(wn abort)-.25 F
.421(routine to handle f)108 108 R .421(atal errors.)-.1 F .42(If a sub\
stitute routine is used, it must not return to the caller or else the p\
ro-)5.421 F(gram will use the)108 120 Q F1(abort)2.5 E F0
(\(\) system call to cause the program to stop.)A F1(malloc_enter)108
144 Q F0 .271(\(\) and)B F1(malloc_lea)2.771 E -.1(ve)-.25 G F0 .271
(\(\) pro).1 F .271
(vide a rudimentary mechanism to track the calling stack that w)-.15 F
.272(as in)-.1 F .539(place when the allocation w)108 156 R .539
(as made.)-.1 F .538
(In order to use this feature, the enter function should be called upon)
5.539 F .226(entry to a function, while the lea)108 168 R .526 -.15
(ve f)-.2 H .226(unction is called when you e).15 F .227
(xit from the function.)-.15 F .227(In order to be accu-)5.227 F .122
(rate, the tw)108 180 R 2.622(of)-.1 G .121(unctions must be used in co\
njunction with each other and a missing call will result in an error)
-2.622 F(generated by the library \(if it is detected\).)108 192 Q(NO)
108 216 Q .781(TE: the ar)-.4 F .781
(gument to either of these functions)-.18 F F1(must)3.282 E F0 .782
(be a constant character string or a static data area.)3.282 F .364
(This is because the stack mechanism does not maintain it')108 228 R
2.864(so)-.55 G .364(wn cop)-3.114 F 2.864(yo)-.1 G 2.864(ft)-2.864 G
.364(hese strings, it just records point-)-2.864 F .88
(ers to the strings and if the strings are on the stack, the)108 240 R
3.381(yw)-.15 G .881(ill go a)-3.381 F -.1(wa)-.15 G 4.681 -.65(y. T).1
H .881(ypically the functions w)-.15 F .881(ould be)-.1 F
(used with "funcname" as the ar)108 252 Q(gument and this will a)-.18 E
-.2(vo)-.2 G(id an).2 E 2.5(yp)-.15 G(roblems.)-2.5 E .639(The stack is\
 listed on the dump and/or list reports and on an error message for a s\
e)108 276 R .639(gment that has already)-.15 F(been freed.)108 288 Q
.898(If these functions ha)108 312 R 1.198 -.15(ve b)-.2 H .898(een use\
d, error messages will include the stack information when the identity \
of).15 F(the error is displayed.)108 324 Q -.15(Fo)5 G 2.5(re).15 G
(xample:)-2.65 E/F2 8/Courier@0 SF
(This error is *probably* associated with the following allocation:)144
346 Q 4.8(Ac)163.2 366 S
(all to malloc for 1 bytes in teststack.c on line 75.)-4.8 E
(This was the 13th call to malloc.)163.2 376 Q
(Stack from where allocated:)163.2 386 Q
(-> sub3\(\) in teststack.c\(73\))168 396 Q
(-> sub2\(\) in teststack.c\(59\))168 406 Q
(-> main\(\) in teststack.c\(23\))168 416 Q/F3 9/Times-Bold@0 SF(USA)72
454.8 Q(GE)-.495 E F0 .35(The library can be used in se)108 466.8 R -.15
(ve)-.25 G .35(ral modes, each increasingly intrusi).15 F .65 -.15
(ve \()-.25 H 2.85(i.e. requiring).15 F .35(changes to be made to)2.85 F
1.012(the b)108 478.8 R 1.012(uild process and/or source code\).)-.2 F
(Ho)6.012 E(we)-.25 E -.15(ve)-.25 G 1.812 -.4(r, t).15 H 1.012(he e).4
F 1.012(xtra cost of a little intrusi)-.15 F -.15(ve)-.25 G 1.013
(ness is repaid in much).15 F 2.045(better problem identi\214cation.)108
490.8 R 2.044(Each mode is b)7.045 F 2.044(uilt upon the pre)-.2 F 2.044
(vious modes and therefore requires the)-.25 F
(changes and/or commands speci\214ed in the lo)108 502.8 Q(wer modes.)
-.25 E F1(MODE 1 - library substitution)108 526.8 Q F0 1.411
(The simplest use is to just link the object module with the)108 550.8 R
F1(libdbmalloc.a)3.911 E F0 6.411(.B)C 3.911(es)-6.411 G 1.411
(ure to ha)-3.911 F 1.712 -.15(ve t)-.2 H 1.412(his library).15 F .894
(before the C library \()108 562.8 R F1(libc.a)A F0 3.394(\)o)C 3.394
(nt)-3.394 G .894(he link command \(this is automatic if you use)-3.394
F F1(cc)3.394 E F0 .894(to link and specify the)3.394 F(deb)108 574.8 Q
(ug library without specifying the C library\).)-.2 E .769
(This mode links in all of the deb)108 598.8 R .769(ug v)-.2 F .77
(ersions of the library modules and will trap as man)-.15 F 3.27(ye)-.15
G .77(rrors as it can)-3.27 F .919
(\(yes, there are errors that the malloc library cannot catch\).)108
610.8 R(En)5.919 E .919(vironment v)-.4 F .918
(ariables can be used to control)-.25 F(the beha)108 622.8 Q
(vior of the library)-.2 E(.)-.65 E 218.17(VTI 6)297.67 768 R EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 10/Times-Bold@0 SF(MODE 2 - malloc.h inclusion)
108 84 Q F0 1.726(This mode in)108 108 R -.2(vo)-.4 G(lv).2 E 1.726
(es including the)-.15 F F1(malloc.h)4.226 E F0 1.726
(\214le included with the deb)4.226 F 1.727(ugging library)-.2 F 6.727
(.T)-.65 G 1.727(he malloc.h \214le)-6.727 F .28(includes macros that w\
ill identify the source line and \214le name for each deb)108 120 R .28
(ugging function called.)-.2 F .28(This is)5.28 F(ho)108 132 Q 2.5(wt)
-.25 G(he library is able to tell you that it w)-2.5 E
(as the call to malloc on line 55 in \214le junk.c.)-.1 E -.8(Ty)108 156
S .416(pically you should al).8 F -.1(wa)-.1 G .417(ys include malloc.h\
 in your source \214les and just use the -I INCLUDEDIR direc-).1 F(ti)
108 168 Q .609 -.15(ve f)-.25 H .309
(or the compiler to point the compiler to the deb).15 F .308(ugging v)
-.2 F .308(ersion of the header \214le instead of the normal)-.15 F 2.5
(\214le. That)108 180 R -.1(wa)2.5 G 2.5(yy).1 G(ou don')-2.5 E 2.5(th)
-.18 G -2.25 -.2(av e)-2.5 H(to change the source \214les when you w)2.7
E(ant to turn of)-.1 E 2.5(ft)-.25 G(he deb)-2.5 E(ugging library)-.2 E
(.)-.65 E(NO)108 204 Q .234(TE: Once you compile code in this mode, you\
 must recompile the code without the deb)-.4 F .235(ugging malloc.h)-.2
F(include \214le in order to get the softw)108 216 Q
(are to use the non-deb)-.1 E(ugging functions.)-.2 E F1
(MODE 3 - run-time speci\214cation of options)108 240 Q F0(En)108 264 Q
.602(vironment v)-.4 F .602(ariables can be used to control the beha)
-.25 F .602(vior of the deb)-.2 F .602(ugging library to some e)-.2 F
3.101(xtent. Ho)-.15 F(w-)-.25 E -2.15 -.25(ev e)108 276 T 1.033 -.4
(r, t).25 H .233(his control is v).4 F .233
(ery coarse in that you only ha)-.15 F .533 -.15(ve o)-.2 H .233
(ne setting a).15 F -.25(va)-.2 G .233
(ilable for the entire running of the pro-).25 F(gram.)108 288 Q 1.19
(This can be a problem if you w)108 312 R 1.19
(ant to turn on malloc chain checking, b)-.1 F 1.19(ut kno)-.2 F 3.69
(wt)-.25 G 1.19(hat the problem occurs)-3.69 F .423(between a relati)108
324 R -.15(ve)-.25 G .423(ly narro).15 F 2.923(wp)-.25 G .423
(ortion of the code and don')-2.923 F 2.923(tw)-.18 G .423(ant to tak)
-3.023 F 2.923(et)-.1 G .423(he hit of ha)-2.923 F .424
(ving chain checking on)-.2 F(for the entire program e)108 336 Q -.15
(xe)-.15 G(cution.).15 E 1.159(The solution to this problem is to inclu\
de calls to dbmallopt\(\) with the deb)108 360 R 1.158
(ugging options which set the)-.2 F .82(appropriate modes when you w)108
372 R .82(ant them set.)-.1 F .82(Since you don')5.82 F 3.321(tw)-.18 G
.821(ant to ha)-3.421 F 1.121 -.15(ve t)-.2 H 3.321(oc).15 G .821
(hange the code to remo)-3.321 F -.15(ve)-.15 G .14
(and add these functions e)108 384 R -.15(ve)-.25 G .139
(ry time you decide to include malloc deb).15 F .139(ugging or not, the)
-.2 F F1(malloc.h)2.639 E F0 .139(\214le de\214nes)2.639 F
(the preprocessor symbol)108 396 Q/F2 8/Times-Roman@0 SF(_DEB)2.5 E
(UG_MALLOC_INC)-.08 E F0(which can be used in your code as follo)2.5 E
(ws:)-.25 E/F3 8/Courier@0 SF(#ifdef _DEBUG_MALLOC_INC)144 418 Q
(dbmallopt\(.... \);)180 428 Q(#endif)144 438 Q F0 .437
(In addition to setting beha)108 462 R .437(vior options, you might w)
-.2 F .437(ant to mak)-.1 F 2.937(eu)-.1 G .437
(se of the memory leak detection routines)-2.937 F .016(in this mode.)
108 474 R .016
(These calls should also be surrounded by #ifdefs for the deb)5.016 F
.015(ug malloc symbol so that you can)-.2 F(lea)108 486 Q 1.432 -.15
(ve t)-.2 H 1.133(hem in the code and automatically get the increased f\
unctionality whene).15 F -.15(ve)-.25 G 3.633(ry).15 G 1.133
(ou compile with the)-3.633 F(deb)108 498 Q(ugging library)-.2 E(.)-.65
E F1(MODE 4 - deeper inclusion of malloc calls)108 522 Q F0 1.119
(This mode in)108 546 R -.2(vo)-.4 G(lv).2 E 1.118(es inserting calls t\
o the special functions supported by the malloc library \(lik)-.15 F
3.618(et)-.1 G 1.118(he leak)-3.618 F .285
(detection or stack maintenance routines\).)108 558 R .285(The ef)5.285
F .285(fects of the inclusions depends upon the modules included)-.25 F
(and the amount to which the)108 570 Q 2.5(ya)-.15 G(re used.)-2.5 E
1.979
(It is strongly recommended that you setup your code with the follo)108
594 R 1.979(wing lines in a header \214le that is)-.25 F
(included by all modules, or just add the code to the be)108 606 Q
(ginning of the modules themselv)-.15 E(es:)-.15 E F3
(#ifndef _DEBUG_MALLOC_INC)144 628 Q(#define malloc_enter\(func\))144
638 Q(#define malloc_leave\(func\))144 648 Q
(#define malloc_chain_check\(\))144 658 Q(#define malloc_dump\(fd\))144
668 Q(#define malloc_list\(a,b,c\))144 678 Q
(#define malloc_inuse\(hist\))144 688 Q(\(*\(hist\) = 0, 0\))19.2 E
(#endif)144 698 Q F0 .452(This will automatically disable the reference\
d functions when the malloc library is not included \(as should)108 722
R 218.17(VTI 7)297.67 768 R EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E(be the case when you mak)108 84 Q 2.5(eap)-.1 G
(roduction b)-2.5 E(uild\).)-.2 E/F1 9/Times-Bold@0 SF(ENVIR)72 100.8 Q
(ONMENT V)-.27 E(ARIABLES)-1.215 E F0(En)108 112.8 Q 1.034(vironment v)
-.4 F 1.034(ariables can be used to control error handling, error loggi\
ng and malloc chain checking at)-.25 F 2.426(run time.)108 124.8 R 2.426
(Most of these en)7.426 F 2.426(vironment v)-.4 F 2.426
(ariables can be set via the)-.25 F/F2 10/Times-Bold@0 SF(dbmallopt)
4.926 E F0 2.427(\(\) routine and are well)B
(described in that portion of the document.)108 136.8 Q
(Look for further information there.)5 E(The follo)108 153.6 Q(wing en)
-.25 E(vironment v)-.4 E(ariables are used:)-.25 E/F3 8/Times-Roman@0 SF
(MALLOC_BOUNDSIZE)126 177.6 Q F0 .794(This speci\214es the minimum numb\
er of bytes that the allocation routines will)16.896 F(lea)226 189.6 Q
1.686 -.15(ve u)-.2 H 1.387(nused at the end of each se).15 F 3.887
(gment. This)-.15 F -.25(va)3.887 G 1.387(lue may be an).25 F 3.887(yn)
-.15 G(on-zero)-3.887 E(positi)226 201.6 Q 2.091 -.15(ve i)-.25 H(nte)
.15 E 1.791(ger \(although you must remember that the amount of memory)
-.15 F(used is directly related to this b)226 213.6 Q(uf)-.2 E
(fer area.)-.25 E .254(It may be necessary to increase this v)226 230.4
R .255(alue if you think you ha)-.25 F .555 -.15(ve a m)-.2 H .255
(odule that).15 F .6(is writing f)226 242.4 R .6(ar enough be)-.1 F .599
(yond its malloc se)-.15 F .599(gment that it changes the ne)-.15 F .599
(xt se)-.15 F(g-)-.15 E .705(ment \(and therefore doesn')226 254.4 R
3.205(tm)-.18 G(ak)-3.205 E 3.205(eac)-.1 G .705
(hange that this library w)-3.205 F .706(ould be able to)-.1 F(detect.)
226 266.4 Q .297(The def)226 283.2 R .297(ault for this v)-.1 F .297
(alue is 1 \(although because of memory alignment issues,)-.25 F 1.58
(you will usually ha)226 295.2 R 1.88 -.15(ve m)-.2 H 1.58
(ore than one byte of \214ller at the end of most se).15 F(g-)-.15 E
(ments\).)226 307.2 Q F3(MALLOC_CKCHAIN)126 319.2 Q F0 .9
(if 1, turns on malloc chain checking at e)25.784 F -.15(ve)-.25 G .9
(ry call to an).15 F 3.4(yo)-.15 G 3.4(ft)-3.4 G .9(he malloc func-)-3.4
F(tions.)226 331.2 Q F3(MALLOC_DET)126 343.2 Q(AIL)-.744 E F0 .196
(if set to a non-zero inte)34.088 F(ger)-.15 E(,)-.4 E F2(malloc_dump)
2.696 E F0(sho)2.696 E .196(ws some internal detail for each)-.25 F .412
(entry in the chain.)226 355.2 R .412
(This info is probably only of use if you are deb)5.412 F .412
(ugging the)-.2 F(malloc library itself.)226 367.2 Q F3(MALLOC_ERRFILE)
126 379.2 Q F0 1.204
(speci\214es the error log \214le for error messages.)29.776 F 1.205
(Error messages generated by)6.205 F .85(the library are)226 391.2 R F2
(APPENDED)3.35 E F0 .849(to this \214le, so if you w)3.35 F .849
(ant a clean \214le, you will)-.1 F(ha)226 403.2 Q 1.13 -.15(ve t)-.2 H
3.33(or).15 G(emo)-3.33 E 1.13 -.15(ve o)-.15 H 3.33(re).15 G .831
(mpty it yourself between runs.)-3.33 F .831(If this option is used, no)
5.831 F .209(indication of an error will be sent to stdout or stderr \(\
this is purposefully done)226 415.2 R .806(this w)226 427.2 R .807
(ay so that if you are running a full screen program, it doesn')-.1 F
3.307(tm)-.18 G .807(ess up)-3.307 F(the screen\).)226 439.2 Q F3
(MALLOC_F)126 451.2 Q -.968 -.888(AT A)-.592 H(L).888 E F0
(speci\214es the error handling for f)38.672 E(atal errors)-.1 E F3
(MALLOC_FILLAREA)126 463.2 Q F0 .779
(speci\214es the \214ll area \215ag setting.)23.56 F .779
(If zero, malloc/free area \214lling and check-)5.779 F 3.216
(ing is disabled \(thereby increasing performance, while decreasing ef)
226 475.2 R(fec-)-.25 E(ti)226 487.2 Q -.15(ve)-.25 G .597
(ness of the library\).).15 F .596(See the discussion of the)5.597 F F2
(dbmallopt)3.096 E F0 .596(\(\) ar)B .596(guments for)-.18 F
(more info on other settings.)226 499.2 Q F3(MALLOC_FILLBYTE)126 511.2 Q
F0 .88(This speci\214es the inte)24.448 F .881(ger v)-.15 F .881
(alue of the character to use when \214lling allocated)-.25 F 3.105
(areas. This)226 523.2 R -.25(va)3.105 G .605(lue def).25 F .604
(aults to 1 and must be within the range of 0 - 255. This)-.1 F .014
(capability is useful if you belie)226 535.2 R .314 -.15(ve t)-.25 H
.014(hat you are ha).15 F .015(ving a problem with code that)-.2 F 1.163
(is trashing its malloc re)226 547.2 R 1.162
(gion with a data pattern that matches the def)-.15 F 1.162(ault \214ll)
-.1 F(pattern.)226 559.2 Q(NO)226 576 Q 1.109
(TE: if an attempt is made to use a v)-.4 F 1.11
(alue outside the speci\214ed range, the)-.25 F(ne)226 588 Q 2.5(wv)-.25
G(alue is)-2.75 E F2(silently)2.5 E F0(ignored and the def)2.5 E
(ault is used.)-.1 E F3(MALLOC_FREEBYTE)126 600 Q F0 .046
(This speci\214es the inte)21.776 F .046(ger v)-.15 F .045
(alue of the character to use when \214lling freed areas.)-.25 F .094
(This v)226 612 R .094(alue def)-.25 F .094
(aults to 1 and must be within the range of 0 - 255. It should also)-.1
F(be dif)226 624 Q(ferent from)-.25 E F3(MALLOC_FILLBYTE)2.5 E F0 2.5
(,b)C(ut that is not enforced.)-2.7 E(NO)226 640.8 Q 1.109
(TE: if an attempt is made to use a v)-.4 F 1.109
(alue outside the speci\214ed range, the)-.25 F(ne)226 652.8 Q 2.5(wv)
-.25 G(alue is)-2.75 E F2(silently)2.5 E F0(ignored and the def)2.5 E
(ault is used.)-.1 E F3(MALLOC_LO)126 664.8 Q(WFRA)-.28 E(G)-.32 E F0
1.629(if 1, turns on best \214t allocation algorithm.)23.272 F 1.629
(Otherwise, \214rst \214t algorithm is)6.629 F 1.734
(used for \214nding allocation se)226 676.8 R 1.733
(gments \(which can cause memory fragmenta-)-.15 F(tion\).)226 688.8 Q
218.17(VTI 8)297.67 768 R EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 8/Times-Roman@0 SF(MALLOC_CKD)126 84 Q -.968
-.888(AT A)-.32 H F0 .316(if 0, disables checking of pointers passed to\
 string/memory functions for mal-)31.736 F(loc re)226 96 Q(gion o)-.15 E
-.15(ve)-.15 G(rwrites.).15 E F1(MALLOC_REUSE)126 108 Q F0 .764
(if 0, disables reuse of freed memory se)36.888 F .763
(gments and it does not \214ll free')-.15 F 3.263(ds)-.5 G -.15(eg)
-3.263 G(-).15 E 1.56(ments with the \214ll pattern.)226 120 R 1.561
(If 1, freed se)6.561 F 1.561(gments are \214lled and the)-.15 F 4.061
(yc)-.15 G 1.561(an be)-4.061 F 2.808(reused. If)226 132 R .308
(2, freed se)2.808 F .308(gments can be reused, b)-.15 F .308(ut the)-.2
F 2.808(ya)-.15 G .308(re not \214lled when freed.)-2.808 F F1
(MALLOC_SHO)126 144 Q(W_LINKS)-.28 E F0 .389
(when an error is found, the suspected allocation is displayed.)11.4 F
(Ho)5.389 E(we)-.25 E -.15(ve)-.25 G 1.19 -.4(r, s).15 H(ince).4 E .8
(it is possible that the ne)226 156 R .799(xt or pre)-.15 F .799
(vious allocation in the malloc chain w)-.25 F .799(as the)-.1 F 1.045
(actual culprit these links may be of interest.)226 168 R 1.045
(If this v)6.045 F 1.046(ariable is set to a non-)-.25 F(zero inte)226
180 Q(ger \(i.e. 1\) the links will also be sho)-.15 E(wn.)-.25 E F1
(MALLOC_W)126 192 Q(ARN)-.96 E F0(speci\214es the error handling for w)
38.744 E(arning errors)-.1 E .39(As an e)108 216 R .389
(xample, to set up the session to generate a core \214le for e)-.15 F
-.15(ve)-.25 G .389(ry malloc w).15 F .389(arning, to drop core and e)
-.1 F(xit)-.15 E(on a malloc f)108 228 Q
(atal, and to log all messages to the \214le "malloc_log" do the follo)
-.1 E(wing:)-.25 E/F2 8/Courier@0 SF(MALLOC_WARN=131)144 250 Q
(MALLOC_FATAL=1)144 260 Q(MALLOC_ERRFILE=malloc_log)144 270 Q
(export MALLOC_WARN MALLOC_FATAL MALLOC_ERRFILE)144 290 Q/F3 9
/Times-Bold@0 SF(ERR)72 318.8 Q(OR MESSA)-.27 E(GES)-.495 E F0
(The follo)108 330.8 Q(wing error messages are reported by the library:)
-.25 E F1(M_CODE_B)126 347.6 Q(AD_CONNECT)-.28 E F0 4.467
(Pointers between this se)54.728 F 4.467(gment and adjoining se)-.15 F
4.468(gments are)-.15 F(in)276 359.6 Q -.25(va)-.4 G(lid.).25 E 2.179
(This error indicates that the malloc chain has been corrupted.)276
376.4 R .038(This is most often caused by an o)276 388.4 R -.15(ve)-.15
G .039(rwrite of the malloc header by).15 F(an access via the pre)276
400.4 Q(vious malloc se)-.25 E(gment.)-.15 E F1(M_CODE_B)126 417.2 Q
(AD_MA)-.28 E(GIC)-.32 E F0(Malloc re)66.16 E(gion does not ha)-.15 E .3
-.15(ve a v)-.2 H(alid magic number in header)-.1 E(.)-.55 E 1.483
(This error is caused by se)276 434 R -.15(ve)-.25 G 1.482
(ral mechanisms including).15 F/F4 10/Times-Bold@0 SF(fr)3.982 E(ee)-.18
E F0(\(\)ing)A .346(the same pointer twice or a pointer that w)276 446 R
.346(as not returned by)-.1 F F4(mal-)2.846 E(loc)276 458 Q F0
(\(\), or writing be)A(yond the end of a se)-.15 E(gment.)-.15 E F1
(M_CODE_B)126 474.8 Q(AD_PTR)-.28 E F0(Pointer is not within malloc re)
77.832 E(gion.)-.15 E 1.608(The pointer passed to)276 491.6 R F4(fr)
4.108 E(ee)-.18 E F0(or)4.108 E F4 -.18(re)C(alloc).18 E F0 1.608
(is not pointer returned by)4.108 F F4(malloc)276 503.6 Q F0 5.349(.A)C
.349(nother cause is corruption of the malloc chain by writ-)-5.349 F
(ing be)276 515.6 Q(yond the end of a se)-.15 E(gment.)-.15 E F1
(M_CODE_CHAIN_BR)126 532.4 Q(OKE)-.32 E F0
(Malloc chain is corrupted, pointers out of order)56.992 E(.)-.55 E .14
(Corruption has been detected in the malloc chain that is related to)276
549.2 R 1.567(the relati)276 561.2 R 1.867 -.15(ve p)-.25 H 1.568
(ositions of the malloc chain se).15 F 1.568(gments in memory)-.15 F(.)
-.65 E 1.825(This is an indication that someone has o)276 573.2 R -.15
(ve)-.15 G 1.824(rwritten be).15 F 1.824(yond the)-.15 F(amount the)276
585.2 Q 2.5(ya)-.15 G(llocated.)-2.5 E F1(M_CODE_FREELIST_B)126 602 Q
(AD)-.28 E F0(Malloc se)56.056 E(gment in free list is in-use.)-.15 E
2.713(As)276 618.8 S -.15(eg)-2.713 G .214
(ment that is in the free-list is \215agged as in-use.).15 F .214
(This is usu-)5.214 F .307(ally caused by o)276 630.8 R -.15(ve)-.15 G
.307(rwriting from the pre).15 F .307(vious se)-.25 F .307
(gment in the mal-)-.15 F(loc chain.)276 642.8 Q F1(M_CODE_FREEMARK)126
659.6 Q F0(Free called to free a se)69.552 E(gment that has been mark)
-.15 E(ed.)-.1 E .53(Marking a se)276 676.4 R .53
(gment is done because you belie)-.15 F .83 -.15(ve t)-.25 H .53
(hat the se).15 F(gment)-.15 E .564(will not be free')276 688.4 R 3.064
(da)-.5 G .564(nd therefore don')-3.064 F 3.064(tw)-.18 G .564
(ant it to appear in the list)-3.164 F .024(of possible leaks.)276 700.4
R .025(If you then go on to free it, perhaps it shouldn')5.024 F(t)-.18
E(ha)276 712.4 Q .3 -.15(ve b)-.2 H(een mark).15 E(ed.)-.1 E 12.68
(This error message can be disabled with the)276 729.2 R 218.17(VTI 9)
297.67 768 R EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E(MALLOC_FREEMARK option on the)276 84 Q/F1 10
/Times-Bold@0 SF(dbmallopt)2.5 E F0(\(\) function.)A/F2 8/Times-Roman@0
SF(M_CODE_NOBOUND)126 100.8 Q F0(Unable to determine double)73.12 E -.1
(wo)-.25 G(rd boundary).1 E .471(The code w)276 117.6 R .471
(as unable to \214gure out the boundary requirements for)-.1 F 2.5(ad)
276 129.6 S(ouble)-2.5 E -.1(wo)-.25 G 2.5(rd. This).1 F
(error should ne)2.5 E -.15(ve)-.25 G 2.5(ro).15 G(ccur)-2.5 E(.)-.55 E
F2(M_CODE_NOMORE_MEM)126 146.4 Q F0
(Unable to get additional memory from the system.)55.336 E .856
(The system call)276 163.2 R F1(sbrk)3.356 E F0 -.1(fa)3.356 G .855
(iled to obtain more memory for the pro-).1 F(gram.)276 175.2 Q F2
(M_CODE_NO)126 192 Q(T_INUSE)-.32 E F0(Data is not in use \(can')69.44 E
2.5(tb)-.18 G 2.5(ef)-2.5 G(reed or reallocated\).)-2.5 E 3.159(Ap)276
208.8 S .659(ointer to a malloc se)-3.159 F .659
(gment has been passed to)-.15 F F1(fr)3.159 E(ee)-.18 E F0 .66(\(\) or)
B F1 -.18(re)3.16 G(al-).18 E(loc)276 220.8 Q F0(\(\), b)A(ut this se)
-.2 E(gment has already been freed.)-.15 E F2(M_CODE_NO_END)126 237.6 Q
F0(Malloc chain is corrupted, end before end pointer)81.12 E(.)-.55 E -1
(Ye)276 254.4 S 3.174(ta)1 G .674(nother o)-3.174 F -.15(ve)-.15 G .674
(rwrite problem.).15 F .674(This error means that we got to)8.174 F .39
(what we belie)276 266.4 R .69 -.15(ve i)-.25 H 2.89(st).15 G .391
(he end of the chain, b)-2.89 F .391(ut it does not match the)-.2 F
(recorded end of the chain.)276 278.4 Q F2(M_CODE_OUT)126 295.2 Q
(OF_BOUNDS)-.144 E F0(Pointer within malloc re)49.704 E(gion, b)-.15 E
(ut outside of malloc data bounds.)-.2 E 1.553
(This is caused by a call to one of the string/memory functions)276 312
R .039
(that attempt to read/write bytes that are not included in the alloca-)
276 324 R .911(tion associated with that memory)276 336 R 5.911(.T)-.65
G .911(his is the most typical error)-5.911 F
(that you will see from the malloc library)276 348 Q(.)-.65 E F2
(M_CODE_O)126 364.8 Q(VERR)-.4 E(UN)-.32 E F0(Data has o)75.168 E -.15
(ve)-.15 G(rrun be).15 E(yond requested number of bytes.)-.15 E .375
(This error is detected by)276 381.6 R F1(fr)2.875 E(ee)-.18 E F0 .376
(\(\) and indicates that the current se)B(g-)-.15 E 3.862
(ment has written data be)276 393.6 R 3.862
(yond the number of bytes that it)-.15 F 2.784(requested. This)276 405.6
R .284(only catches o)2.784 F -.15(ve)-.15 G .284(rwrites when the).15 F
2.785(ya)-.15 G .285(re within the)-2.785 F -.15(ex)276 417.6 S .382
(tra space allocated with each se).15 F .382
(gment \(this can range from one)-.15 F .773(to eight bytes\).)276 429.6
R .773(If the o)5.773 F -.15(ve)-.15 G .774
(rwrite occurs further along it will usu-).15 F
(ally cause some corruption in the malloc chain.)276 441.6 Q F2
(M_CODE_REUSE)126 458.4 Q F0(Data in free')87.776 E 2.5(da)-.5 G
(rea has been modi\214ed.)-2.5 E 1.585(Data in a freed se)276 475.2 R
1.585(gment has been modi\214ed.)-.15 F 1.585(This usually indi-)6.585 F
.412(cates that the program is using a pointer after it called free, b)
276 487.2 R .413(ut it)-.2 F .912(may also be caused by an o)276 499.2 R
-.15(ve)-.15 G .912(rwrite from a pre).15 F .911(vious se)-.25 F .911
(gment in)-.15 F(the chain.)276 511.2 Q F2(M_CODE_STK_B)126 528 Q
(ADFUNC)-.28 E F0(Current function name doesn')56.056 E 2.5(tm)-.18 G
(atch name on stack.)-2.5 E F1(malloc_lea)276 544.8 Q -.1(ve)-.25 G F0
1.449(\(\) w).1 F 1.449(as called with a function name that is not the)
-.1 F .19(current function.)276 556.8 R .189
(This is usually caused by a missing call to)5.189 F F1(mal-)2.689 E
(loc_enter)276 568.8 Q F0 3.098
(\(\) in the same function, or a missing call to)B F1(mal-)5.598 E
(loc_lea)276 580.8 Q -.1(ve)-.25 G F0(\(\) in a sub-function.).1 E F2
(M_CODE_STK_NOCUR)126 597.6 Q F0 3.04
(No current function on stack, probably missing call to mal-)66 F
(loc_enter\(\).)276 609.6 Q F1(malloc_lea)276 626.4 Q -.1(ve)-.25 G F0
1.006(\(\) w).1 F 1.006(as called with a function name and there is no)
-.1 F .569
(current function \(the stack is empty\). This is usually caused by a)
276 638.4 R .258(missing call to)276 650.4 R F1(malloc_enter)2.759 E F0
.259(\(\), or an e)B .259(xtra call to)-.15 F F1(malloc_lea)2.759 E -.1
(ve)-.25 G F0(\(\)).1 E(in the same function.)276 662.4 Q 213.17(VTI 10)
297.67 768 R EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 8/Times-Roman@0 SF(M_CODE_UNDERR)126 84 Q(UN)
-.32 E F0(Data has written before be)68.992 E
(ginning of requested bytes.)-.15 E .376(This error is detected by)276
100.8 R/F2 10/Times-Bold@0 SF(fr)2.876 E(ee)-.18 E F0 .375
(\(\) and indicates that the current se)B(g-)-.15 E 2.966
(ment has written data before the be)276 112.8 R 2.967
(ginning of the requested)-.15 F 4.574(block. This)276 124.8 R 2.074
(only catches o)4.574 F -.15(ve)-.15 G 2.073(rwrites when the).15 F
4.573(ya)-.15 G 2.073(re within the)-4.573 F -.15(ex)276 136.8 S 1.812
(tra space allocated before each se).15 F 1.812
(gment \(this is usually four)-.15 F 3.325(bytes\). If)276 148.8 R .825
(the o)3.325 F -.15(ve)-.15 G .825
(rwrite occurs further back it will usually cause).15 F
(some corruption in the malloc chain.)276 160.8 Q F1(M_CODE_ZER)126
177.6 Q(O_ALLOC)-.32 E F0(An allocation routine w)61.88 E
(as called to allocate zero bytes.)-.1 E .461
(While ANSI C requires that allocations of zero bytes are permis-)276
194.4 R .674(sible and should be supported, the beha)276 206.4 R .674
(vior of such an operation)-.2 F .736
(can be unde\214ned on non-ANSI systems.)276 218.4 R .737(This w)5.737 F
.737(arning will alert)-.1 F
(you to the locations where these calls are made.)276 230.4 Q 1.666
(This error message can be disabled with the MALLOC_ZER)276 247.2 R(O)
-.4 E(option on the)276 259.2 Q F2(dbmallopt)2.5 E F0(\(\) function.)A
/F3 9/Times-Bold@0 SF(DUMP OUTPUT)72 288 Q F0(Sample dump/list output:)
108 300 Q/F4 8/Courier@0 SF(************************** Dump of Malloc C\
hain ****************************)144 322 Q 19.2(POINTER FILE)144 332 R
38.4(WHERE LINE)9.6 F 33.6(ALLOC DATA)28.8 F(HEX DUMP)24 E(TO DATA)144
342 Q 38.4(ALLOCATED NUMBER)28.8 F 28.8(FUNCT LENGTH)24 F(OF BYTES 1-7)
9.6 E(-------- -------------------- ------- -------------- ------- ----\
----------)144 352 Q(0x403DB4 teststack.c)144 362 Q(75 malloc\(1\))72 E
(40 01010101010101)52.8 E(-> sub3\(\) in teststack.c\(73\))187.2 372 Q
(-> main\(\) in teststack.c\(23\))187.2 382 Q(0x403E0C testerr.c)144 392
Q(16 realloc\(1\))81.6 E(20 01010101010101)48 E F0
(The info in each column is as follo)108 416 Q(ws:)-.25 E F1(POINTER)126
432.8 Q F0 1.202(the pointer returned by the allocation function \(the \
pointer the the allocated)66.224 F(data area\).)226 444.8 Q F1(FILE)126
461.6 Q F0 .856(the name of the \214le where the allocation function w)
83.112 F .856(as called.)-.1 F .855(This informa-)5.855 F 1.54
(tion is only a)226 473.6 R -.25(va)-.2 G 1.54
(ilable if the source \214le includes the).25 F F2(malloc.h)4.04 E F0
1.54(\214le from this)4.04 F 2.169
(library \(as opposed to the system include \214le\).)226 485.6 R 2.169
(If the source \214le did not)7.169 F .21
(include this \214le, the \214le will be listed as unkno)226 497.6 R .21
(wn and the line number will be)-.25 F 2.508(blank. Note)226 509.6 R
.008(that an)2.508 F 2.508(ym)-.15 G .007
(alloc calls from system libraries will probably not ha)-2.508 F -.15
(ve)-.2 G 1.429(been compiled with the)226 521.6 R F2(malloc.h)3.929 E
F0 1.429(\214le included and will therefore appear as)3.929 F(unkno)226
533.6 Q(wn.)-.25 E F1 .348(LINE NUM)126 550.4 R F0 .347
(The line number of the line that called the allocation function.)61.12
F .347(This \214eld will)5.347 F .712(be left blank if the)226 562.4 R
F2(malloc.h)3.212 E F0 .712(from this library w)3.212 F .712
(as not included in the source)-.1 F(\214le when it w)226 574.4 Q
(as compiled.)-.1 E F1 1.85(ALLOC FUNC)126 591.2 R F0 1.849
(The allocation function called:)50 F F2(malloc)4.349 E F0(,)A F2 -.18
(re)4.349 G(alloc).18 E F0 4.349(,o)C(r)-4.349 E F2(calloc)4.349 E F0
6.849(.T)C 1.849(he number in)-6.849 F .618(parenthesis follo)226 603.2
R .618(wing the function name is the call number for that particular)
-.25 F 2.545(function. F)226 615.2 R .045(or e)-.15 F .045
(xample: malloc\(1\) means that this allocation w)-.15 F .045
(as the 1st call to)-.1 F(malloc.)226 627.2 Q F1 -.32(DA)126 644 S 1.488
-.744(TA L)-.568 H(EN).744 E F0(The number of bytes allocated.)62.184 E
213.17(VTI 11)297.67 768 R EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 8/Times-Roman@0 SF .081(HEX DUMP)126 84 R F0
2.581(Ah)58.448 G -.15(ex)-2.581 G .081(adecimal dump of the \214rst se)
.15 F -.15(ve)-.25 G 2.581(nb).15 G .082(ytes in the allocated data.)
-2.581 F .082(This e)5.082 F(xam-)-.15 E .464(ple sho)226 96 R .464(ws \
the bytes \214lled with 0x01s which happen to be the \214ll pattern use\
d)-.25 F .277(by the malloc library \(to mak)226 108 R 2.777(es)-.1 G
.277(ure that one doesn')-2.777 F 2.777(td)-.18 G .277(epend upon the f)
-2.777 F .278(act that)-.1 F .137
(some calls to malloc result in NULL bytes\).)226 120 R .137
(So the allocations that are sho)5.137 F(wn)-.25 E(ha)226 132 Q -.15(ve)
-.2 G(n').15 E 2.5(ts)-.18 G(tored an)-2.5 E 2.5(yd)-.15 G
(ata in the area yet.)-2.5 E .416(The lines that be)108 148.8 R .416
(gin with a "->" are stack dump lines which sho)-.15 F 2.916(wt)-.25 G
.416(he calling en)-2.916 F .416(vironment that w)-.4 F .417(as present)
-.1 F 1.656(when the are w)108 160.8 R 1.656(as allocated.)-.1 F 1.656
(The en)6.656 F 1.656(vironment is managed via the use of the)-.4 F/F2
10/Times-Bold@0 SF(malloc_enter)4.155 E F0 1.655(\(\) and)B F2(mal-)
4.155 E(loc_lea)108 172.8 Q -.1(ve)-.25 G F0(\(\) routines.).1 E 2.275
(If the en)108 189.6 R 2.275(vironment v)-.4 F(ariable)-.25 E F1
(MALLOC_DET)4.775 E(AIL)-.744 E F0 2.276(is non-zero, the follo)4.776 F
2.276(wing additional information will be)-.25 F(included:)108 201.6 Q
/F3 8/Courier@0 SF
(************************************************************** Du...)
144 223.6 Q 19.2(FREE FREE)283.2 233.6 R(ACTUAL SIZE)86.4 E(...)19.2 E
24(PTR NEXT)153.6 243.6 R 19.2(PREV NEXT PREV)24 F 28.8(FLAGS INT)28.8 F
19.2(HEX ...)19.2 F(-------- -------- -------- -------- -------- ------\
---- -------- --------- ...)144 253.6 Q
(0x403C94 0x403CEC 0x40326C 0x000000 0x000000 0x03156111)144 263.6 Q
(48\(0x000030\) ...)33.6 E
(0x403CEC 0x403D2C 0x403C94 0x000000 0x000000 0x03156121)144 273.6 Q
(24\(0x000018\) ...)33.6 E
(0x403D2C 0x403D6C 0x403CEC 0x000000 0x403D6C 0x03156120)144 283.6 Q
(24\(0x000018\) ...)33.6 E
(0x403D6C 0x000000 0x403D2C 0x403D2C 0x000000 0x03156120)144 293.6 Q
(24\(0x000018\) ...)33.6 E(Malloc start:)144 313.6 Q(0x40326C)28.8 E
(Malloc end:)144 323.6 Q(0x403D2C)38.4 E(Malloc data start: 0x403C94)144
333.6 Q(Malloc data end:)144 343.6 Q(0x405C94)14.4 E(Malloc free list:)
144 353.6 Q(0x403D6C)9.6 E(-> 0x403D2C)220.8 363.6 Q F0(NO)108 387.6 Q
(TE that I cut of)-.4 E 2.5(ft)-.25 G(he e)-2.5 E
(xample at the point where the normal output w)-.15 E(ould be)-.1 E
(gin \(hence the ...\).)-.15 E(The info in each column is as follo)108
404.4 Q(ws:)-.25 E F1(PTR)126 421.2 Q F0
(The malloc chain pointer for the se)65.328 E
(gment \(the address of the se)-.15 E(gment\).)-.15 E F1(NEXT)126 438 Q
F0(The pointer to the ne)58.672 E(xt se)-.15 E(gment in the chain.)-.15
E F1(PREV)126 454.8 Q F0(The pointer to the pre)59.552 E(vious se)-.25 E
(gment in the chain.)-.15 E F1(FREE NEXT)126 471.6 Q F0
(The pointer to the ne)37.112 E(xt se)-.15 E(gment in the free list.)
-.15 E F1(FREE PREV)126 488.4 Q F0(The pointer to the pre)37.992 E
(vious se)-.25 E(gment in the free list.)-.15 E F1(FLA)126 505.2 Q(GS)
-.32 E F0 .867(The \215ags associated with this se)54.984 F 3.367
(gment. This)-.15 F .867(is a long inte)3.367 F .867
(ger which contains the)-.15 F(follo)206 517.2 Q(wing \214elds)-.25 E
4.14(0xFFFFFF00 the)224 534 R 3.438(magic number)5.938 F 8.438(.T)-.55 G
3.439(his should be 0x03156100 \(probably)-8.438 F(someone')284 546 Q
2.5(sb)-.55 G(irthday\).)-2.5 E 7.5(0x00000070 the)224 562.8 R 1.137
(type of allocation function. Malloc \(x010\), realloc \(0x20\),)3.638 F
(or calloc \(0x30\) are the only v)284 574.8 Q(alid v)-.25 E
(alues for this \214eld\).)-.25 E 7.5(0x00000001 the)224 591.6 R .56
(in-use \215ag.)3.06 F .56(if this v)5.56 F .56
(alue is non-zero, the indicated se)-.25 F(gment)-.15 E
(is currently in use \(not freed\).)284 603.6 Q F1 -.32(AC)126 620.4 S
(TU).32 E .221(AL SIZE)-.32 F F0 .221(The actual size reserv)29.312 F
.221(ed for the allocation in both decimal and he)-.15 F 2.72(x. This)
-.15 F .22(will be at)2.72 F .093(least one byte more than the requeste\
d size, and as much as 8, so that we can check)206 632.4 R
(to see if the allocation has been o)206 644.4 Q -.15(ve)-.15 G(rrun.)
.15 E(Malloc)108 661.2 Q F2(start)2.5 E F0(and)2.5 E F2(end)2.5 E F0
(are pointers to the \214rst and last malloc chain se)2.5 E
(gment, respecti)-.15 E -.15(ve)-.25 G(ly).15 E(.)-.65 E(Malloc)108 678
Q F2 .365(data start)2.865 F F0(and)2.864 E F2 .364(data end)2.864 F F0
.364(are the lo)2.864 F .364
(west and highest data bytes managed my the malloc sub-system.)-.25 F
.365(These are only used as a quick check to see if a pointer is in the\
 malloc re)108 690 R .366(gion before we go hunting do)-.15 F(wn)-.25 E
(the chain trying to identify the se)108 702 Q(gment it belongs to.)-.15
E 213.17(VTI 12)297.67 768 R EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E(Malloc)108 84 Q/F1 10/Times-Bold@0 SF(fr)3.22 E
.72(ee list)-.18 F F0 .72(is a chain of the elements in the free list \
\(so it is easier for the programmer to follo)3.22 F 3.22(wt)-.25 G(he)
-3.22 E(free list if the)108 96 Q 2.5(yc)-.15 G(hoose to\).)-2.5 E
(The address of each element in the list follo)5 E(ws belo)-.25 E 2.5
(wt)-.25 G(he list head.)-2.5 E/F2 9/Times-Bold@0 SF 2.25(XP)72 112.8 S
-.27(RO)-2.25 G(GRAM DEB).27 E(UGGING)-.09 E F0 1.117(The malloc librar\
y includes a set of compatibility routines for the Xt toolkit allocatio\
n routines:)108 124.8 R F1(XtMal-)3.618 E(loc)108 136.8 Q F0(\(\),)A F1
(XtCalloc)5.285 E F0(\(\),)A F1(XtRealloc)5.285 E F0(\(\),and)A F1(XtFr)
5.284 E(ee)-.18 E F0 7.784(\(\). These)B 2.784(routines pro)5.284 F
2.784(vide the same le)-.15 F -.15(ve)-.25 G 5.284(lo).15 G 5.284(fm)
-5.284 G 2.784(alloc area)-5.284 F(inte)108 148.8 Q .413
(grity checking that is pro)-.15 F .414(vided by the basic malloc funct\
ions while maintaining complete compatibility)-.15 F
(with the X11R5 functions.)108 160.8 Q .027
(If you link an X package with the deb)108 184.8 R .026
(ug library and you mak)-.2 F 2.526(eac)-.1 G .026(all to an)-2.526 F
2.526(yo)-.15 G 2.526(ft)-2.526 G .026(he Xt allocation routines, the)
-2.526 F(deb)108 196.8 Q .23(ug modules will automatically be included.)
-.2 F .23(If you don')5.23 F 2.73(tc)-.18 G .23(all them directly)-2.73
F 2.73(,b)-.65 G .23(ut you still w)-2.93 F .23(ant to include)-.1 F
(them in order to better deb)108 208.8 Q
(ug their use, you can add a -u link)-.2 E
(er speci\214cation for XtRealloc.)-.1 E -.15(Fo)5 G 2.5(re).15 G
(xample:)-2.65 E/F3 8/Courier@0 SF
(cc -o xapp -u XtRealloc xapp.o -ldbmalloc -lXt -lX....)144 230.8 Q F0
.083(Note that you may ha)108 254.8 R .383 -.15(ve t)-.2 H 2.583(oa).15
G .083(dd an underscore before the XtRealloc if your compiler does this\
 automatically)-2.583 F(.)-.65 E 2.587(As)108 278.8 S .087
(econd potential problem with X is caused by a dif)-2.587 F .087
(ference between X11R4 and X11R5.)-.25 F .088(If you only ha)5.088 F
-.15(ve)-.2 G .234(one of theses packages, then the malloc library will\
 be automatically con\214gured to handle that package.)108 290.8 R(If,)
5.234 E(ho)108 302.8 Q(we)-.25 E -.15(ve)-.25 G 1.073 -.4(r, y).15 H
.273(ou ha).4 F .573 -.15(ve b)-.2 H .274(oth of them installed and you\
 need to be able to link with either system, you may ha).15 F -.15(ve)
-.2 G .435(to add a -u _XtHeapInit to the link line on the X11R5 links.)
108 314.8 R .435(This is because X11R5 de\214nes both the heap)5.435 F
.462(management and malloc management routines in the same module, whil\
e X11R4 de\214nes them in dif)108 326.8 R(ferent)-.25 E(modules.)108
338.8 Q .377(The sign of this problem is a link error due to duplicate \
references to the Xt allocation routines \(XtMalloc,)108 362.8 R(etc\).)
108 374.8 Q F2(LINKING)72 391.6 Q F0 .127
(The order in which you link your programs can ha)108 403.6 R .427 -.15
(ve a s)-.2 H .127(igni\214cant ef).15 F .127
(fect on the usefulness of the library and)-.25 F -2.15 -.25(ev e)108
415.6 T 2.799(no).25 G 2.799(nt)-2.799 G .299
(he ability to link itself.)-2.799 F .299(The deb)5.299 F .299
(ug library should be placed as the \214rst system library that you are)
-.2 F(linking to \(assuming that you are calling at least one of the ma\
lloc, string, or memory functions\).)108 427.6 Q -.15(Fo)108 451.6 S 2.5
(re).15 G(xample, if the follo)-2.65 E
(wing is your normal link command:)-.25 E F3
(cc -o app app.o supp.o else.o applib.a -lmath -lcurses)144 473.6 Q F0
-1.1(Yo)108 497.6 S 2.822(us)1.1 G .323(hould add the malloc deb)-2.822
F .323(ug library in between applib)-.2 F .323(.a and -lmath, which w)
-.4 F .323(ould result in the follo)-.1 F(w-)-.25 E(ing:)108 509.6 Q F3
(cc -o app app.o supp.o else.o applib.a -ldbmalloc -lmath -lcurses)144
531.6 Q F0 1.861(This will ensure that the deb)108 555.6 R 1.861
(ug malloc library o)-.2 F -.15(ve)-.15 G 1.86
(rrides all of the allocation routines within the other).15 F
(libraries.)108 567.6 Q .766(If you ha)108 591.6 R 1.066 -.15(ve o)-.2 H
.766(ther problems compiling or linking with the library you should loo\
k at the).15 F/F4 8/Times-Roman@0 SF(PR)3.266 E(OBLEMS)-.32 E F0 .766
(\214le in)3.266 F .657(the source directory)108 603.6 R 5.656(.T)-.65 G
.656(his \214le contains descriptions of common problems and the recomm\
ended solutions)-5.656 F(to the problems.)108 615.6 Q F2(PERFORMANCE)72
632.4 Q F0 .144(This malloc library and its associated string and memor\
y functions are much less ef)108 644.4 R .145
(\214cient than the standard)-.25 F .061(functions due in part to the e)
108 656.4 R .061(xtra error checking.)-.15 F -1.1(Yo)5.061 G 2.561(ud)
1.1 G 2.56(on)-2.561 G .06(ot w)-2.56 F .06
(ant to use this library when generating a pro-)-.1 F
(duction \(i.e. releasable\) v)108 668.4 Q(ersion of your softw)-.15 E
2.5(are. It)-.1 F(should only be used during de)2.5 E -.15(ve)-.25 G
(lopment and testing.).15 E 213.17(VTI 13)297.67 768 R EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E 1.142(The follo)108 84 R 1.142(wing en)-.25 F
1.142(vironment v)-.4 F 1.142(ariable settings will gi)-.25 F 1.442 -.15
(ve y)-.25 H 1.142(ou the best performance \(at the e).15 F 1.142
(xpense of some)-.15 F(additional error checking\):)108 96 Q/F1 8
/Courier@0 SF(MALLOC_CKCHAIN=0)144 118 Q(MALLOC_CKDATA=0)144 128 Q
(MALLOC_FILLAREA=0)144 138 Q(MALLOC_LOWFRAG=0)144 148 Q F0 2.654 -.8
(We r)108 172 T 1.053(ecommend ag).8 F 1.053(ainst setting MALLOC_FILLA\
REA to zero because, while it will increase the perfor)-.05 F(-)-.2 E
.353(mance, it tak)108 184 R .353(es a)-.1 F -.1(wa)-.15 G 2.853(yt).1 G
.353(he capability to unco)-2.853 F -.15(ve)-.15 G 2.853(rs).15 G .353
(mall malloc o)-2.853 F -.15(ve)-.15 G .353(rruns which don').15 F 2.853
(to)-.18 G -.15(ve)-3.003 G .354(rrite the pointers sur).15 F(-)-.2 E
(rounding the malloc re)108 196 Q 2.5(gions. The)-.15 F
(same anti-recommendation applies to MALLOC_CKD)2.5 E -1.21 -1.11(AT A)
-.4 H(.)1.11 E(An)108 220 Q(yw)-.15 E(ay)-.1 E 2.855(,w)-.65 G .355(ith\
 these settings, the malloc library runs at about 1/2 the speed \(thing\
s only tak)-2.855 F 2.854(et)-.1 G .354(wice as long\))-2.854 F .503
(as the standard library)108 232 R 5.503(.I)-.65 G 3.003(fy)-5.503 G
.504(ou program spends most of its time in malloc, it will still be slo)
-3.003 F 3.004(w\()-.25 G -.2(bu)-3.004 G 3.004(tp).2 G(erhaps)-3.004 E
(this is an indication that you need to consider changing the w)108 244
Q(ay you are using malloc\).)-.1 E/F2 9/Times-Bold@0 SF -1.08(WA)72
260.8 S(RNINGS)1.08 E F0 1.451(The include \214le for this library "mal\
loc.h" should be included after the includes for an)108 272.8 R 3.951
(ys)-.15 G 1.451(ystem related)-3.951 F 3.62(information. This)108 284.8
R 1.121(is because "malloc.h" rede\214nes se)3.62 F -.15(ve)-.25 G 1.121
(ral system functions including string and memory).15 F .371(routines a\
nd this will usually cause compilation errors if malloc.h is processed \
\214rst \(of course, the compile)108 296.8 R
(errors will talk about errors in the other system include \214les lik)
108 308.8 Q 2.5(es)-.1 G(tring.h\).)-2.5 E .459
(This goes hand in hand with the f)108 332.8 R .459(act that if you ha)
-.1 F .759 -.15(ve l)-.2 H .459
(ocal de\214nitions of the return types of standard func-).15 F 1.255
(tions lik)108 344.8 R 3.755(es)-.1 G 1.254(trcmp\(\) or malloc\(\), th\
ese lines will cause compile errors due to the #de\214nes in the malloc\
.h)-3.755 F .548(header \214le.)108 356.8 R .548
(Therefore, it is suggested that you remo)5.548 F .848 -.15(ve a)-.15 H
.549(ll such de\214nitions from your code and rely on the).15 F 1.893(s\
ystem header \214les to de\214ne these functions, or you surround the d\
e\214nitions with #ifdef)108 368.8 R/F3 8/Times-Roman@0 SF(DEB)4.393 E
(UG_MAL-)-.08 E(LOC_INC)108 380.8 Q F0(.)A 1.028
(There is a possibility that the use of)108 404.8 R/F4 10/Times-Bold@0
SF(sbrk)3.528 E F0 1.029
(\(\) by other modules will cause this library to get confused and)B
.869(possibly report some pointers as bad when the really aren')108
416.8 R 3.369(tp)-.18 G .869(art of the malloc chain itself.)-3.369 F
.868(Therefore the)5.868 F(direct use of)108 428.8 Q F4(sbrk)2.5 E F0
(\(\) is strongly discouraged.)A .854
(This library attempts to trap errors and e)108 452.8 R .855
(xit/handle them gracefully)-.15 F 5.855(.H)-.65 G -.25(ow)-5.855 G
-2.15 -.25(ev e).25 H 1.655 -.4(r, t).25 H .855
(he nature of the problems).4 F .126
(may be such that it causes the code in the library itself to crash.)108
464.8 R .126(There is no w)5.126 F .126(ay to a)-.1 F -.2(vo)-.2 G .126
(id this, b).2 F .126(ut if it does)-.2 F(occur)108 476.8 Q 5(,t)-.4 G
(urn on chain checking to narro)-5 E 2.5(wt)-.25 G
(he place where it will occur)-2.5 E(.)-.55 E .38(The functions in this\
 library will often con\215ict with duplicate functions in shared libra\
ry v)108 500.8 R .38(ersions of libc.a.)-.15 F .828
(This is usually due to the f)108 512.8 R .828
(act that some shared library modules ha)-.1 F 1.127 -.15(ve ex)-.2 H
.827(plicit references to shared library).15 F -.15(ve)108 524.8 S
(rsions of the deb).15 E(ug functions.)-.2 E(The only w)5 E
(ay around this is to not use the shared library when linking.)-.1 E
1.286(This malloc library)108 548.8 R 3.787(,l)-.65 G(ik)-3.787 E 3.787
(em)-.1 G 1.287(ost malloc libraries, is not re-entrant and therefore s\
hould not be called from)-3.787 F .253
(interrupt handlers because of the potential for recei)108 560.8 R .253
(ving an interrupt in the middle of a call to malloc which)-.25 F -.1
(wo)108 572.8 S(uld really mess things up.).1 E F2(SEE ALSO)72 589.6 Q
F0(malloc\(3\), string\(3\), memory\(3\))108 601.6 Q 213.17(VTI 14)
297.67 768 R EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(DEB)72 48 Q 129.53(UG_MALLOC\(3\) 1.11 DEB)-.1 F
(UG_MALLOC\(3\))-.1 E/F1 9/Times-Bold@0 SF(COPYRIGHT)72 84 Q F0
(\(c\) Cop)110.5 96 Q(yright 1990, 1991, 1992 Conor P)-.1 E 2.5(.C)-1.11
G(ahill \(cpcahil@virtech.vti.com\))-2.5 E(This softw)110.5 120 Q
(are may be distrib)-.1 E(uted freely as long as the follo)-.2 E
(wing conditions)-.25 E(are met:)110.5 132 Q 2.5(*t)128 144 S
(he distrib)-2.5 E(ution, or an)-.2 E 2.5(yd)-.15 G(eri)-2.5 E -.25(va)
-.25 G(ti).25 E .3 -.15(ve t)-.25 H(hereof, may not be).15 E
(included as part of a commercial product)133 156 Q 2.5(*f)128 168 S
(ull source code is pro)-2.5 E(vided including this cop)-.15 E(yright)
-.1 E 2.5(*t)128 180 S(here is no char)-2.5 E(ge for the softw)-.18 E
(are itself \(there may be)-.1 E 2.5(am)133 192 S(inimal char)-2.5 E
(ge for the cop)-.18 E(ying or distrib)-.1 E(ution ef)-.2 E(fort\))-.25
E 2.5(*t)128 204 S(his cop)-2.5 E
(yright notice is not modi\214ed or remo)-.1 E -.15(ve)-.15 G 2.5(df).15
G(rom an)-2.5 E(y)-.15 E(source \214le)149 216 Q F1 -.45(AU)72 244.8 S
(THOR).45 E F0(Conor P)108 256.8 Q 2.5(.C)-1.11 G(ahill)-2.5 E -.6(Vi)
108 268.8 S(rtual T).6 E(echnologies Incorporated)-.7 E
(46030 Manekin Plaza, Suite 160)108 280.8 Q(Sterling V)108 292.8 Q 2.5
(A2)-1.35 G(2170)-2.5 E(703-430-9247)108 304.8 Q
(cpcahil@virtech.vti.com)108 321.6 Q(uunet!virtech!cpcahil)108 333.6 Q
213.17(VTI 15)297.67 768 R EP
%%Trailer
end
%%EOF
